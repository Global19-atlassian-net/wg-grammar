---
created: "2019-05-05T19:54:12.061196300Z"
creator: insta@0.7.4
source: src/bin/snapshots.rs
expression: forest
---
Ok(
    Expr {
        attrs: [],
        kind: ExprKind::Binary {
            op: BinaryOp::Mul,
            left: Expr {
                attrs: [],
                kind: ExprKind::Literal
            },
            right: Expr {
                attrs: [],
                kind: ExprKind::Binary {
                    op: BinaryOp::Add,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Div,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Binary {
                                    op: BinaryOp::Sub,
                                    left: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    },
                                    right: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    }
                                }
                            }
                        } | ExprKind::Binary {
                            op: BinaryOp::Sub,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Binary {
                                    op: BinaryOp::Div,
                                    left: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    },
                                    right: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    }
                                }
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    }
                } | ExprKind::Binary {
                    op: BinaryOp::Div,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Add,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Sub,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    }
                } | ExprKind::Binary {
                    op: BinaryOp::Sub,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Add,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Binary {
                                    op: BinaryOp::Div,
                                    left: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    },
                                    right: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    }
                                }
                            }
                        } | ExprKind::Binary {
                            op: BinaryOp::Div,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Binary {
                                    op: BinaryOp::Add,
                                    left: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    },
                                    right: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    }
                                }
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    }
                }
            }
        } | ExprKind::Binary {
            op: BinaryOp::Add,
            left: Expr {
                attrs: [],
                kind: ExprKind::Binary {
                    op: BinaryOp::Mul,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    }
                }
            },
            right: Expr {
                attrs: [],
                kind: ExprKind::Binary {
                    op: BinaryOp::Div,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Sub,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    }
                } | ExprKind::Binary {
                    op: BinaryOp::Sub,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Div,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    }
                }
            }
        } | ExprKind::Binary {
            op: BinaryOp::Div,
            left: Expr {
                attrs: [],
                kind: ExprKind::Binary {
                    op: BinaryOp::Mul,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Add,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    }
                } | ExprKind::Binary {
                    op: BinaryOp::Add,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Mul,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    }
                }
            },
            right: Expr {
                attrs: [],
                kind: ExprKind::Binary {
                    op: BinaryOp::Sub,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    }
                }
            }
        } | ExprKind::Binary {
            op: BinaryOp::Sub,
            left: Expr {
                attrs: [],
                kind: ExprKind::Binary {
                    op: BinaryOp::Mul,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Add,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Binary {
                                    op: BinaryOp::Div,
                                    left: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    },
                                    right: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    }
                                }
                            }
                        } | ExprKind::Binary {
                            op: BinaryOp::Div,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Binary {
                                    op: BinaryOp::Add,
                                    left: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    },
                                    right: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    }
                                }
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    }
                } | ExprKind::Binary {
                    op: BinaryOp::Add,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Mul,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Div,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    }
                } | ExprKind::Binary {
                    op: BinaryOp::Div,
                    left: Expr {
                        attrs: [],
                        kind: ExprKind::Binary {
                            op: BinaryOp::Mul,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Binary {
                                    op: BinaryOp::Add,
                                    left: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    },
                                    right: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    }
                                }
                            }
                        } | ExprKind::Binary {
                            op: BinaryOp::Add,
                            left: Expr {
                                attrs: [],
                                kind: ExprKind::Binary {
                                    op: BinaryOp::Mul,
                                    left: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    },
                                    right: Expr {
                                        attrs: [],
                                        kind: ExprKind::Literal
                                    }
                                }
                            },
                            right: Expr {
                                attrs: [],
                                kind: ExprKind::Literal
                            }
                        }
                    },
                    right: Expr {
                        attrs: [],
                        kind: ExprKind::Literal
                    }
                }
            },
            right: Expr {
                attrs: [],
                kind: ExprKind::Literal
            }
        }
    }
)
